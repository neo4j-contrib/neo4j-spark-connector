name: Python CI

on:
  push:
    branches:
      - '4.2'
  pull_request:
    branches:
      - '4.2'
jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.6", "3.7", "3.8" ]
        neo4j-version: [ "3.5", "4.0", "4.1", "4.2", "4.3", "4.4" ]
        spark-version: [ {short: "3", ext: "3.2.2", scala: "2.12"} ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install six tzlocal==2.1 'pypandoc==1.5'
          pip install pyspark==${{ matrix.spark-version.ext }} "testcontainers[neo4j]"
      - name: Build artifact
        env:
          CI: true
        run: |
          ./mvnw clean package -DskipTests -P spark-${{ matrix.spark-version.short }} -P scala-${{ matrix.spark-version.scala }} --no-transfer-progress
      - name: Run tests for Spark ${{ matrix.spark-version.ext }} and Neo4j ${{ matrix.neo4j-version }}
        if: ${{ !(matrix.spark-version.short == 2.4 && matrix.python-version == 3.8) && !(matrix.spark-version.ext == '3.2.2' && matrix.python-version == 3.5) }}
        run: |
          project_version="$(mvn help:evaluate -Dexpression="project.version" --quiet -DforceStdout -P spark-${{ matrix.spark-version.short }} -P scala-${{ matrix.spark-version.scala }})"
          cd ./scripts/python
          python test_spark.py "${{ matrix.spark-version.short }}" "${{ matrix.spark-version.scala }}" "${{ matrix.neo4j-version }}" "${project_version}"
